#include "pt4.h"
#include "mpi.h"

void Solve()
{
    Task("MPI3Coll25");
    int flag;
    MPI_Initialized(&flag);
    if (flag == 0)
        return;
    int rank, size;
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    double* d = new double[2*size];
    double* res = new double[2*size];
    for (int i = 0; i < 2 * size; i++)
    {
        double a;
        pt >> a;
        d[i] = a;
    }
    
    int* recvcounts = new int[size];
    for (int i = 0; i < size; i++)
    {
        recvcounts[i] = 2;
    }

    MPI_Reduce_scatter(d, res, recvcounts, MPI_DOUBLE, MPI_MAX, MPI_COMM_WORLD);
    for (int i = 0; i < 2; i++)
    {
        pt << res[i];
    }
}
