// File: "OOP1Creat5"
using PT4;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace PT4Tasks
{
    public class MyTask : PT
    {
        public abstract class AbstractButton
        {
            public abstract string GetControl();
        }

        // Implement the Button1 and Button2 descendant classes

        public class Button1 : AbstractButton
        {
            string text;
            public Button1(string text)
            {
                this.text = "[" + text.ToUpper() + "]";
            }
            public override string GetControl()
            {
                return this.text;
            }

        }

        public class Button2 : AbstractButton
        {
            string text;
            public Button2(string text)
            {
                this.text = "<" + text.ToLower() + ">";
            }
            public override string GetControl()
            {
                return this.text;
            }

        }

        public abstract class AbstractLabel
        {
            public abstract string GetControl();
        }

        // Implement the Label1 and Label2 descendant classes

        public class Label1 : AbstractLabel
        {
            string text;
            public Label1(string text)
            {
                this.text = "=" + text.ToUpper() + "=";
            }
            public override string GetControl()
            {
                return this.text;
            }
        }

        public class Label2 : AbstractLabel
        {
            string text;
            public Label2(string text)
            {
                this.text = "\"" + text.ToLower() + "\"";
            }
            public override string GetControl()
            {
                return this.text;
            }
        }

        public abstract class ControlFactory
        {
            public abstract AbstractButton CreateButton(string text);
            public abstract AbstractLabel CreateLabel(string text);
        }

        // Implement the Factory1 and Factory2 descendant classes

        public class Factory1: ControlFactory
        {
            public override AbstractButton CreateButton(string text)
            {
                return new Button1(text);
            }
            public override AbstractLabel CreateLabel(string text)
            {
                return new Label1(text);
            }
        
        }

        public class Factory2:ControlFactory
        {

            public override AbstractButton CreateButton(string text)
            {
                return new Button2(text);
            }
            public override AbstractLabel CreateLabel(string text)
            {
                return new Label2(text);
            }
        }

        public class Client
        {
            // Add required fields

            ControlFactory f;
            AbstractButton button;
            AbstractLabel label;
            string text;

            public Client(ControlFactory f)
            {
                // Implement the constructor
                this.f = f;
                button = null;
                label = null;
            }
            public void AddButton(string text)
            {
                // Implement the method
                text = text.Substring(2);
                button = f.CreateButton(text);
                this.text = button.GetControl();
            }
            public void AddLabel(string text)
            {
                // Implement the method
                text = text.Substring(2);
                label = f.CreateLabel(text);
                this.text = label.GetControl();
            }
            public string GetControls()
            {
                return this.text;
                // Remove the previous statement and implement the method
            }
        }

        public static void Solve()
        {
            Task("OOP1Creat5");
            int N;
            N = GetInt();
            string s1 = "", s2 = "";
            var F1 = new Client(new Factory1());
            var F2 = new Client(new Factory2());

            for (int i=0;i<N;i++)
            {
                string text;
                text = GetString();
                switch(text[0])
                {
                    case 'B':
                        F1.AddButton(text);
                        s1 += F1.GetControls();

                        F2.AddButton(text);
                        s2 += F2.GetControls();

                        if (i < N - 1)
                        {
                            s1 += " ";
                            s2 += " ";
                        }
                        break;

                    case 'L':
                        F1.AddLabel(text);
                        s1 += F1.GetControls();

                        F2.AddLabel(text);
                        s2 += F2.GetControls();

                        if (i < N - 1)
                        {
                            s1 += " ";
                            s2 += " ";
                        }
                        break;

                }
            }

            //Show(s1);
            //Show(s2);
            Put(s1);
            Put(s2);

        }
    }
}
