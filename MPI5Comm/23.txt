#include "pt4.h"
#include "mpi.h"

void Solve()
{
    Task("MPI5Comm23");
    int flag;
    MPI_Initialized(&flag);
    if (flag == 0)
        return;
    int rank, size;
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    MPI_Comm new_comm;
    int M, N, X, Y;
    if (rank == 0)
    {
        pt >> M >> N;
    }
    
    MPI_Bcast(&M, 1, MPI_INT, 0, MPI_COMM_WORLD);
    MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);
    if (rank < M * N)
    {
        pt >> X >> Y;
        int dims[] = { M, N };
        int periods[] = { 1,0 };
        MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 0, &new_comm);

        int coords[2];
        coords[0] = X;
        coords[1] = Y;

        int rank;
        MPI_Comm_set_errhandler(new_comm, MPI_ERRORS_RETURN);
        if (MPI_SUCCESS == MPI_Cart_rank(new_comm, coords, &rank))
            pt << rank;
        else
            pt << -1;
    }

}
