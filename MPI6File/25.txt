#include "pt4.h"
#include "mpi.h"

void Solve()
{
    Task("MPI6File25");
    int flag;
    MPI_Initialized(&flag);
    if (flag == 0)
        return;
    int rank, size;
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    char name[12];
    if (rank == 0)
    {
        pt >> name;
    }
    MPI_Bcast(name, 12, MPI_CHAR, 0, MPI_COMM_WORLD);

    MPI_File f;
    MPI_File_open(MPI_COMM_WORLD, name, MPI_MODE_WRONLY | MPI_MODE_CREATE, MPI_INFO_NULL, &f);

    MPI_Status s;

    int* a = new int[3 * (rank + 1)];
    for (int i = 0; i < 3 * (rank + 1); i++)
    {
        pt >> a[i];
    }

    MPI_Datatype t;
    int num = 0;
    for (int i = 1; i <= size; i++)
    {
        num = num + i;
    }
    Show(num);

    MPI_Type_vector(3, rank + 1, num, MPI_INT, &t);
    
    int offset = 0;
    for (int i = 0; i <= rank; i++)
    {
        offset = offset + i;
    }
    Show(offset);

    char c[8] = "native";
    MPI_File_set_view(f, offset * sizeof(int), MPI_INT, t, c, MPI_INFO_NULL);

    MPI_File_write_all(f, a, 3 * (rank + 1), MPI_INT, &s);

    MPI_File_close(&f);
}
